suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should generate default deployment
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-podsync
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.spec.containers[0].name
          value: podsync
      - equal:
          path: spec.template.spec.initContainers[0].env[0].name
          value: PODSYNC_PORT
      - equal:
          path: spec.template.spec.initContainers[0].env[0].value
          value: "8080"
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: podsync-init-config
  - it: should use reloader if enabled
    set:
      configuration.reloaderEnabled: true
    asserts:
      - equal:
          path: metadata.annotations.[configmap.reloader.stakater.com/reload]
          value: RELEASE-NAME-podsync
  - it: should include ingress host env variable if ingress enabled
    set:
      ingress.enabled: true
      ingress.host: example.com
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].env[1].name
          value: PODSYNC_HOST
      - equal:
          path: spec.template.spec.initContainers[0].env[1].value
          value: example.com
  - it: should use emptyDir for persistence if disabled
    set:
      persistence.enabled: false
    asserts:
      - equal:
          path: spec.template.spec.volumes[2].name
          value: data
      - equal:
          path: spec.template.spec.volumes[2].emptyDir
          value: {}
  - it: should use existing claim for persistence
    set:
      persistence.enabled: true
      persistence.existingClaim: my-claim
    asserts:
      - equal:
          path: spec.template.spec.volumes[2].name
          value: data
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: my-claim
  - it: should generate new claim for persistence if no existing claim
    set:
      persistence.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.volumes[2].name
          value: data
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: RELEASE-NAME-podsync
